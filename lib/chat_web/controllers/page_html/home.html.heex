<div class="flex h-screen">
  <!-- Sidebar -->
  <div class="w-1/4 bg-gray-800 text-white flex flex-col p-4">
    <h1 class="text-2xl font-bold mb-4">Pepega Chat</h1>
    <h3 class="text-lg font-semibold mb-2">Online Users</h3>
    <ul id="online_users" class="space-y-2 flex-1 overflow-y-auto"></ul>
    <div class="mt-4">
      <label for="username" class="block text-sm font-medium text-gray-300">Username</label>
      <input
        type="text"
        name="username"
        id="username"
        class="mt-1 block w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
        autocomplete="off"
      />
    </div>
  </div>
  <!-- Main Chat Area -->
  <div class="w-3/4 flex flex-col bg-gray-100">
    <!-- Chat messages -->
    <div id="output" class="flex-1 p-4 overflow-y-auto"></div>
    <!-- Message Input -->
    <div class="bg-white p-4 border-t border-gray-300">
      <label for="message" class="sr-only">Message</label>
      <div class="flex">
        <input
          type="text"
          name="message"
          id="message"
          disabled
          class="flex-1 px-3 py-2 border border-gray-300 rounded-l-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
          autocomplete="off"
        />
        <button
          class="px-4 py-2 bg-indigo-600 text-white font-medium rounded-r-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          id="sendBtn"
          disabled
        >
          Send
        </button>
      </div>
    </div>
    <div id="status" class="p-2 text-right text-sm text-gray-600"></div>
  </div>
</div>

<script>
  window.addEventListener("DOMContentLoaded", () => {
      let userNameInput = document.getElementById("username");
      let onlineUser = document.getElementById("online_users");
      let messageInput = document.getElementById("message");
      let chatBox = document.getElementById("output");
      let status = document.getElementById("status");
      let sendBtn = document.getElementById("sendBtn");

      window.channel.join()
          .receive("ok", resp => {
              status.innerHTML = `<span class="inline-block px-2 py-1 text-xs font-semibold text-white bg-green-600 rounded-full">Connected</span>`;
          })
          .receive("error", resp => { console.log("Unable to join", resp) });

      userNameInput.addEventListener("keydown", (e) => {
          if (e.keyCode === 13) {
              window.channel.push("chat:newUser", {
                  user: e.target.value,
              });
              e.target.setAttribute("disabled", true);
              messageInput.removeAttribute("disabled");
              messageInput.focus();
              sendBtn.removeAttribute("disabled");
          }
      });

      sendBtn.addEventListener("click", () => {
          if (messageInput.value === "")
              return;

          window.channel.push("chat:msg", {
              user: userNameInput.value,
              msg: messageInput.value,
              insert_at: new Date()
          });
          messageInput.value = "";
      });

      messageInput.addEventListener("keydown", (e) => {
          if (e.target.value === "")
              return;
          if (e.keyCode === 13) {
              window.channel.push("chat:msg", {
                  user: userNameInput.value,
                  msg: e.target.value,
                  insert_at: new Date()
              });
              e.target.value = "";
          }
      });

      window.channel.on("chat:msg", ({ insert_at, user, msg }) => {
          let content = `
              <div class="flex ${user === userNameInput.value ? 'justify-end' : 'justify-start'}">
                  <div class="max-w-xs rounded-md p-2 mb-2 ${user === userNameInput.value ? 'bg-indigo-600 text-white' : 'bg-gray-700 text-white'}">
                      <span class="text-sm font-bold">${user}</span>: ${msg}
                      <div class="text-xs text-gray-400">${formatTime(insert_at)}</div>
                  </div>
              </div>
          `;
          chatBox.innerHTML = chatBox.innerHTML + content + "</br>";
          chatBox.scrollTop = chatBox.scrollHeight;
      });

      window.channel.on("chat:newUser", (data) => {
          addNewUser(data.newUser);
      });

      window.channel.on("chat:userJoined", ({ user }) => {
          let notification = `
              <div class="text-center my-2">
                  <span class="inline-block px-2 py-1 text-sm font-semibold text-indigo-600 bg-indigo-200 rounded-full">${user} is joining</span>
              </div>
          `;
          chatBox.innerHTML = chatBox.innerHTML + notification;
          chatBox.scrollTop = chatBox.scrollHeight;
      });

      window.channel.on("chat:userLeft", ({ user }) => {
          removeUser(user);
          let notification = `
              <div class="text-center my-2">
                  <span class="inline-block px-2 py-1 text-sm font-semibold text-red-600 bg-red-200 rounded-full">${user} has left</span>
              </div>
          `;
          chatBox.innerHTML = chatBox.innerHTML + notification;
          chatBox.scrollTop = chatBox.scrollHeight;
      });

      window.channel.on("orang", ({ data }) => {
          if (data) {
              for (let i = 0; i < data.length; i++) {
                  if (data[i].user)
                      addNewUser(data[i].user);
              }
          }
      });

      function addNewUser(user) {
          let liEl = document.createElement("li");
          liEl.textContent = user;
          liEl.setAttribute("data-user", user);
          onlineUser.appendChild(liEl);
      }

      function removeUser(user) {
          let userElement = document.querySelector(`li[data-user="${user}"]`);
          if (userElement) {
              userElement.remove();
          }
      }

      function formatTime(datetime) {
          const m = new Date(datetime);
          return ("0" + m.getHours()).slice(-2) + ":"
              + ("0" + m.getMinutes()).slice(-2) + ":"
              + ("0" + m.getSeconds()).slice(-2);
      }
  });
</script>
